<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title></title>
      <link href="/2021/06/27/2018-03-18-ssh/"/>
      <url>/2021/06/27/2018-03-18-ssh/</url>
      
        <content type="html"><![CDATA[<h1 id="ssh多个秘钥管理"><a href="#ssh多个秘钥管理" class="headerlink" title="ssh多个秘钥管理"></a>ssh多个秘钥管理</h1><h5 id="ssh-agent服务"><a href="#ssh-agent服务" class="headerlink" title="ssh-agent服务"></a>ssh-agent服务</h5><h6 id="管理员模式启动Windows-PowerShell"><a href="#管理员模式启动Windows-PowerShell" class="headerlink" title="管理员模式启动Windows PowerShell"></a>管理员模式启动<strong>Windows PowerShell</strong></h6><h6 id="1-使用下面两个命令行启动ssh-agent服务"><a href="#1-使用下面两个命令行启动ssh-agent服务" class="headerlink" title="1.使用下面两个命令行启动ssh-agent服务"></a>1.使用下面两个命令行启动<em><strong>ssh-agent服务</strong></em></h6><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">Set-Service -Name ssh-agent -StartupType Manual</span><br></pre></td></tr></table></figure><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">Start-Service ssh-agent</span><br></pre></td></tr></table></figure><p>2.添加到代理</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ssh-add ~/.ssh/自定义秘钥名称</span><br></pre></td></tr></table></figure><h3 id="3-配置git"><a href="#3-配置git" class="headerlink" title="3.配置git"></a>3.配置git</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git config --global user.email “1044934446@qq.com”</span><br></pre></td></tr></table></figure><p>4.生成密钥</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ssh-keygen -t rsa</span><br></pre></td></tr></table></figure>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>Hello World</title>
      <link href="/2021/06/26/hello-world/"/>
      <url>/2021/06/26/hello-world/</url>
      
        <content type="html"><![CDATA[<p>Welcome to <a href="https://hexo.io/">Hexo</a>! This is your very first post. Check <a href="https://hexo.io/docs/">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href="https://hexo.io/docs/troubleshooting.html">troubleshooting</a> or you can ask me on <a href="https://github.com/hexojs/hexo/issues">GitHub</a>.</p><h2 id="Quick-Start"><a href="#Quick-Start" class="headerlink" title="Quick Start"></a>Quick Start</h2><h3 id="Create-a-new-post"><a href="#Create-a-new-post" class="headerlink" title="Create a new post"></a>Create a new post</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo new <span class="string">&quot;My New Post&quot;</span></span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/writing.html">Writing</a></p><h3 id="Run-server"><a href="#Run-server" class="headerlink" title="Run server"></a>Run server</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo server</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/server.html">Server</a></p><h3 id="Generate-static-files"><a href="#Generate-static-files" class="headerlink" title="Generate static files"></a>Generate static files</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo generate</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/generating.html">Generating</a></p><h3 id="Deploy-to-remote-sites"><a href="#Deploy-to-remote-sites" class="headerlink" title="Deploy to remote sites"></a>Deploy to remote sites</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo deploy</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/one-command-deployment.html">Deployment</a></p>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>npm script</title>
      <link href="/2018/04/16/2018-04-16-nodejs/"/>
      <url>/2018/04/16/2018-04-16-nodejs/</url>
      
        <content type="html"><![CDATA[<h1 id="Nodejs-–-npm-script"><a href="#Nodejs-–-npm-script" class="headerlink" title="Nodejs – npm script"></a>Nodejs – <code>npm script</code></h1><h2 id="npm脚本"><a href="#npm脚本" class="headerlink" title="npm脚本:"></a>npm脚本:</h2><blockquote><p>在 <code>package.json</code> 文件里面<br>   <code>&#123;   // ...       &quot;scripts&quot;: &#123;         &quot;build&quot;: &quot;node build.js&quot;       &#125;     &#125;</code><br>    script字段是一个对象，它的每个属性对应一个脚本。<br>    当在命令行中运行 <code>npm run build</code> 就会执行脚本     <code>node build.js</code><br>    <code>npm run </code> 之后发生了什么？答：会创建shell,然后在shell里面执行脚本(脚本的执行上下文会指向<code>node_modules/.bin</code>目录)</p></blockquote><h2 id="简写"><a href="#简写" class="headerlink" title="简写"></a>简写</h2><blockquote><p> <code>npm start是npm run start     npm stop是npm run stop的简写     npm test是npm run test的简写     npm restart是npm run stop &amp;&amp; npm run restart &amp;&amp; npm run start的简写</code></p></blockquote><h2 id="获取package-json文件里的属性变量"><a href="#获取package-json文件里的属性变量" class="headerlink" title="获取package.json文件里的属性变量"></a>获取package.json文件里的属性变量</h2><blockquote><p><code>&#123;       &quot;name&quot;: &quot;foo&quot;,        &quot;version&quot;: &quot;1.2.5&quot;,       &quot;scripts&quot;: &#123;         &quot;view&quot;: &quot;node view.js&quot;       &#125;     &#125;</code><br>    方法：通过 环境变量<code>process.env</code>，配合前缀<code>npm_package_</code>来获取<br>    比如：获取上面的变量name,可以这样： <code>process.env.npm_package_name</code></p></blockquote><h2 id="常用脚本命令"><a href="#常用脚本命令" class="headerlink" title="常用脚本命令"></a>常用脚本命令</h2><p><code>// 删除目录 &quot;clean&quot;: &quot;rimraf dist/*&quot;, // 本地搭建一个 HTTP 服务 &quot;serve&quot;: &quot;http-server -p 9090 dist/&quot;, // 打开浏览器 &quot;open:dev&quot;: &quot;opener http://localhost:9090&quot;, // 实时刷新  &quot;livereload&quot;: &quot;live-reload --port 9091 dist/&quot;, // 构建 HTML 文件 &quot;build:html&quot;: &quot;jade index.jade &gt; dist/index.html&quot;, // 只要 CSS 文件有变动，就重新执行构建 &quot;watch:css&quot;: &quot;watch &#39;npm run build:css&#39; assets/styles/&quot;, // 只要 HTML 文件有变动，就重新执行构建 &quot;watch:html&quot;: &quot;watch &#39;npm run build:html&#39; assets/html&quot;, // 部署到 Amazon S3 &quot;deploy:prod&quot;: &quot;s3-cli sync ./dist/ s3://example-com/prod-site/&quot;, // 构建 favicon &quot;build:favicon&quot;: &quot;node scripts/favicon.js&quot;,</code></p><p>参考链接： <a href="http://www.ruanyifeng.com/blog/2016/10/npm_scripts.html">http://www.ruanyifeng.com/blog/2016/10/npm_scripts.html</a></p>]]></content>
      
      
      <categories>
          
          <category> nodejs </category>
          
      </categories>
      
      
        <tags>
            
            <tag> nodejs </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Vue api</title>
      <link href="/2018/03/13/2018-03-13-Vue-api/"/>
      <url>/2018/03/13/2018-03-13-Vue-api/</url>
      
        <content type="html"><![CDATA[<h1 id="Vue-api"><a href="#Vue-api" class="headerlink" title="Vue api"></a>Vue api</h1><h2 id="1-关于mixins与extends。"><a href="#1-关于mixins与extends。" class="headerlink" title="1. 关于mixins与extends。"></a>1. 关于<code>mixins</code>与<code>extends</code>。</h2><p><code>mixins为多继承</code> <code>extends为单继承</code>，优先级： <code>mixins &lt; extends</code></p>]]></content>
      
      
      <categories>
          
          <category> Vue </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Vue </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>http协议</title>
      <link href="/2018/03/13/2018-04-15-Protocol/"/>
      <url>/2018/03/13/2018-04-15-Protocol/</url>
      
        <content type="html"><![CDATA[<h1 id="http协议"><a href="#http协议" class="headerlink" title="http协议"></a>http协议</h1><blockquote><p>http是一种无状态协议。<br>  （一脸蒙蔽，什么叫无状态？ 每个请求都是独立的。比如有2个请求，第一次请求之后，第二次请求不知道上一次请求的结果。或者说http没有记忆功能 ）</p></blockquote><h2 id="请求报文"><a href="#请求报文" class="headerlink" title="请求报文"></a>请求报文</h2><h3 id="请求的方式分为-GET，POST，PUT，DELETE-一般来讲，这4个请求方式对应着-查增改删"><a href="#请求的方式分为-GET，POST，PUT，DELETE-一般来讲，这4个请求方式对应着-查增改删" class="headerlink" title="请求的方式分为 GET，POST，PUT，DELETE (一般来讲，这4个请求方式对应着 查增改删)"></a>请求的方式分为 <code>GET，POST，PUT，DELETE</code> (一般来讲，这4个请求方式对应着 查增改删)</h3><h3 id="关于GET和POST-同样能够上传数据，get方式把数据放在url里，post把数据放在报文里头。"><a href="#关于GET和POST-同样能够上传数据，get方式把数据放在url里，post把数据放在报文里头。" class="headerlink" title="关于GET和POST: 同样能够上传数据，get方式把数据放在url里，post把数据放在报文里头。"></a>关于<code>GET</code>和<code>POST</code>: 同样能够上传数据，get方式把数据放在url里，post把数据放在报文里头。</h3><p>   （现在有个问题：关于GET请求是否能够修改数据？（不安全））</p><h3 id="持久连接：-通过Connection字段的keep-active实现（安全起见，不应该依赖此属性保持连接）-http-1-1支持"><a href="#持久连接：-通过Connection字段的keep-active实现（安全起见，不应该依赖此属性保持连接）-http-1-1支持" class="headerlink" title="持久连接： 通过Connection字段的keep-active实现（安全起见，不应该依赖此属性保持连接）(http/1.1支持)"></a>持久连接： 通过Connection字段的keep-active实现（安全起见，不应该依赖此属性保持连接）(<code>http/1.1</code>支持)</h3><pre><code>&gt;特点：结合报文的Content-Length字段或者空 chunked 块，客户端与服务端能够判断每一次传输是否结束.</code></pre><h3 id="Transfer-encoding-为chunked时指定-http-2-传输格式"><a href="#Transfer-encoding-为chunked时指定-http-2-传输格式" class="headerlink" title="Transfer-encoding(为chunked时指定 http/2 传输格式)"></a>Transfer-encoding(为chunked时指定 <code>http/2</code> 传输格式)</h3><pre><code>&gt;Transfer-encoding:chunked 下载文件的优缺点&gt;缺点:  由于无法事先知道文件的chunked数量，所以无法提示用户下载进度。 优点： 可以边生成内容边发送，提高速度。 综上可以得出，在用户体验上，chunked类型传输适合小文件下载，不适合超大文件下载。</code></pre>]]></content>
      
      
      <categories>
          
          <category> protocol </category>
          
      </categories>
      
      
        <tags>
            
            <tag> protocol </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>webpack图片优化</title>
      <link href="/2018/03/13/2018-03-13-Webpack/"/>
      <url>/2018/03/13/2018-03-13-Webpack/</url>
      
        <content type="html"><![CDATA[<h1 id="webpack"><a href="#webpack" class="headerlink" title="webpack"></a>webpack</h1><h2 id="1-图片压缩工具（https-github-com-Klathmon-imagemin-webpack-plugin）"><a href="#1-图片压缩工具（https-github-com-Klathmon-imagemin-webpack-plugin）" class="headerlink" title="1.图片压缩工具（https://github.com/Klathmon/imagemin-webpack-plugin）"></a>1.图片压缩工具（<code>https://github.com/Klathmon/imagemin-webpack-plugin</code>）</h2><h1 id="Imagemin-plugin-for-Webpack"><a href="#Imagemin-plugin-for-Webpack" class="headerlink" title="Imagemin plugin for Webpack"></a>Imagemin plugin for Webpack</h1><p><a href="https://www.npmjs.com/package/imagemin-webpack-plugin"><img src="https://img.shields.io/npm/v/imagemin-webpack-plugin.svg" alt="npm"></a><br><a href="http://standardjs.com/"><img src="https://img.shields.io/badge/code%20style-standard-brightgreen.svg" alt="js-standard-style"></a><br><a href="https://www.npmjs.com/package/imagemin-webpack-plugin"><img src="https://img.shields.io/npm/dt/imagemin-webpack-plugin.svg" alt="npm"></a></p><p>This is a simple plugin that uses <a href="https://github.com/imagemin/imagemin">Imagemin</a> to compress all images in your project.</p><h2 id="Install"><a href="#Install" class="headerlink" title="Install"></a>Install</h2><p><code>npm install imagemin-webpack-plugin</code></p><p>Requires node &gt;=4.0.0</p><h2 id="Example-Usage"><a href="#Example-Usage" class="headerlink" title="Example Usage"></a>Example Usage</h2><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> ImageminPlugin = <span class="built_in">require</span>(<span class="string">&#x27;imagemin-webpack-plugin&#x27;</span>).default</span><br><span class="line"><span class="comment">// Or if using ES2015:</span></span><br><span class="line"><span class="comment">// import ImageminPlugin from &#x27;imagemin-webpack-plugin&#x27;</span></span><br><span class="line"></span><br><span class="line"><span class="built_in">module</span>.exports = &#123;</span><br><span class="line">  <span class="attr">plugins</span>: [</span><br><span class="line">    <span class="comment">// Make sure that the plugin is after any plugins that add images</span></span><br><span class="line">    <span class="keyword">new</span> ImageminPlugin(&#123;</span><br><span class="line">      <span class="attr">disable</span>: process.env.NODE_ENV !== <span class="string">&#x27;production&#x27;</span>, <span class="comment">// Disable during development</span></span><br><span class="line">      <span class="attr">pngquant</span>: &#123;</span><br><span class="line">        <span class="attr">quality</span>: <span class="string">&#x27;95-100&#x27;</span></span><br><span class="line">      &#125;</span><br><span class="line">    &#125;)</span><br><span class="line">  ]</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>Working with <a href="https://github.com/kevlened/copy-webpack-plugin">copy-webpack-plugin</a>:</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">module</span>.exports = &#123;</span><br><span class="line">  <span class="attr">plugins</span>: [</span><br><span class="line">    <span class="comment">// Copy the images folder and optimize all the images</span></span><br><span class="line">    <span class="keyword">new</span> CopyWebpackPlugin([&#123;</span><br><span class="line">      <span class="attr">from</span>: <span class="string">&#x27;images/&#x27;</span></span><br><span class="line">    &#125;]),</span><br><span class="line">    <span class="keyword">new</span> ImageminPlugin(&#123; <span class="attr">test</span>: <span class="regexp">/\.(jpe?g|png|gif|svg)$/i</span> &#125;)</span><br><span class="line">  ]</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="API"><a href="#API" class="headerlink" title="API"></a>API</h2><h3 id="new-ImageminPlugin-options"><a href="#new-ImageminPlugin-options" class="headerlink" title="new ImageminPlugin(options)"></a>new ImageminPlugin(options)</h3><h4 id="options-disable"><a href="#options-disable" class="headerlink" title="options.disable"></a>options.disable</h4><p><strong>type</strong>: <code>Boolean</code><br><strong>default</strong>: <code>false</code></p><p>When set to <code>true</code> it will disable the plugin entirely. This is useful for disabling the plugin during development, and only enabling it during production</p><h4 id="options-test"><a href="#options-test" class="headerlink" title="options.test"></a>options.test</h4><p><strong>type</strong>: <code>RegExp</code> or <code>String</code> or <code>Array</code><br><strong>default</strong>: <code>/.*/</code></p><p>This plugin will only run on files that match this test. This is similar to the webpack loader <code>test</code> option (but is not using the same implementation, so there might be major differences!). This can either be a RegExp object, a <a href="https://github.com/isaacs/minimatch">minimatch glob</a>, a function which gets the filename and returns <code>true</code> if the file should be minified, or an array of any of them.</p><p>This can allow you to only run the plugin on specific files, or even include the plugin multiple times for different sets of images and apply different imagemin settings to each.</p><p>This will overwrite everything, including the <code>externalImages</code> option!</p><p>Example:</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> ImageminPlugin <span class="keyword">from</span> <span class="string">&#x27;imagemin-webpack-plugin&#x27;</span></span><br><span class="line"></span><br><span class="line"><span class="built_in">module</span>.exports = &#123;</span><br><span class="line">  <span class="attr">plugins</span>: [</span><br><span class="line">    <span class="comment">// Use the default settings for everything in /images/*</span></span><br><span class="line">    <span class="keyword">new</span> ImageminPlugin(&#123; <span class="attr">test</span>: <span class="string">&#x27;images/**&#x27;</span> &#125;),</span><br><span class="line">    <span class="comment">// bump up the optimization level for all the files in my `bigpngs` directory</span></span><br><span class="line">    <span class="keyword">new</span> ImageminPlugin(&#123;</span><br><span class="line">      <span class="attr">test</span>: <span class="string">&#x27;bigpngs/**&#x27;</span>,</span><br><span class="line">      <span class="attr">optipng</span>: &#123;</span><br><span class="line">        <span class="attr">optimizationLevel</span>: <span class="number">9</span></span><br><span class="line">      &#125;</span><br><span class="line">    &#125;)</span><br><span class="line">  ]</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>Note the order of the plugins matters. <code>CopyWebpackPlugin</code> must be before <code>ImageminWebpackPlugin</code> in the <code>plugins</code> array.</p><h4 id="options-maxConcurrency"><a href="#options-maxConcurrency" class="headerlink" title="options.maxConcurrency"></a>options.maxConcurrency</h4><p><strong>type</strong>: <code>Number</code><br><strong>default</strong>: the number of logical CPUS on the system</p><p>Sets the maximum number of instances of Imagemin that can run at once. Set to <code>Infinity</code> to run a seperate process per image all at the same time.</p><h4 id="options-optipng"><a href="#options-optipng" class="headerlink" title="options.optipng"></a>options.optipng</h4><p><strong>type</strong>: <code>Object</code> or <code>null</code><br><strong>default</strong>: <code>&#123; optimizationLevel: 3 &#125;</code></p><p>Passes the given object to <a href="https://github.com/imagemin/imagemin-optipng"><code>imagemin-optipng</code></a>. Set to <code>null</code> to disable optipng.</p><h4 id="options-gifsicle"><a href="#options-gifsicle" class="headerlink" title="options.gifsicle"></a>options.gifsicle</h4><p><strong>type</strong>: <code>Object</code> or <code>null</code><br><strong>default</strong>: <code>&#123; optimizationLevel: 1 &#125;</code></p><p>Passes the given object to <a href="https://github.com/imagemin/imagemin-gifsicle"><code>imagemin-gifsicle</code></a>. Set to <code>null</code> to disable gifsicle.</p><h4 id="options-jpegtran"><a href="#options-jpegtran" class="headerlink" title="options.jpegtran"></a>options.jpegtran</h4><p><strong>type</strong>: <code>Object</code> or <code>null</code><br><strong>default</strong>: <code>&#123; progressive: false &#125;</code></p><p>Passes the given object to <a href="https://github.com/imagemin/imagemin-jpegtran"><code>imagemin-jpegtran</code></a>. Set to <code>null</code> to disable jpegtran.</p><h4 id="options-svgo"><a href="#options-svgo" class="headerlink" title="options.svgo"></a>options.svgo</h4><p><strong>type</strong>: <code>Object</code> or <code>null</code><br><strong>default</strong>: <code>&#123;&#125;</code></p><p>Passes the given object to <a href="https://github.com/imagemin/imagemin-svgo"><code>imagemin-svgo</code></a>. Set to <code>null</code> to disable svgo.</p><h4 id="options-pngquant"><a href="#options-pngquant" class="headerlink" title="options.pngquant"></a>options.pngquant</h4><p><strong>type</strong>: <code>Object</code> or <code>null</code><br><strong>default</strong>: <code>null</code></p><p>Passes the given object to <a href="https://github.com/imagemin/imagemin-pngquant"><code>imagemin-pngquant</code></a>. Disabled by default.</p><h4 id="options-plugins"><a href="#options-plugins" class="headerlink" title="options.plugins"></a>options.plugins</h4><p><strong>type</strong>: <code>Array</code><br><strong>default</strong>: <code>[]</code></p><p>Include any additional plugins that you want to work with imagemin here. By default the above are included, but if you want (or need to) you can disable them (by setting them to <code>null</code>) and include them yourself here.</p><p>A list of possible imagemin plugins can be found <a href="https://www.npmjs.com/search?q=imagemin%20plugin">here</a>.</p><p>Example:</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> ImageminPlugin <span class="keyword">from</span> <span class="string">&#x27;imagemin-webpack-plugin&#x27;</span></span><br><span class="line"><span class="keyword">import</span> imageminMozjpeg <span class="keyword">from</span> <span class="string">&#x27;imagemin-mozjpeg&#x27;</span></span><br><span class="line"></span><br><span class="line"><span class="built_in">module</span>.exports = &#123;</span><br><span class="line">  <span class="attr">plugins</span>: [</span><br><span class="line">    <span class="keyword">new</span> ImageminPlugin(&#123;</span><br><span class="line">      <span class="attr">plugins</span>: [</span><br><span class="line">        imageminMozjpeg(&#123;</span><br><span class="line">          <span class="attr">quality</span>: <span class="number">100</span>,</span><br><span class="line">          <span class="attr">progressive</span>: <span class="literal">true</span></span><br><span class="line">        &#125;)</span><br><span class="line">      ]</span><br><span class="line">    &#125;)</span><br><span class="line">  ]</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="options-externalImages"><a href="#options-externalImages" class="headerlink" title="options.externalImages"></a>options.externalImages</h4><p><strong>type</strong>: <code>Object</code><br><strong>default</strong>: <code>&#123; context: &#39;.&#39;, sources: [], destination: null &#125;</code></p><p>Include any external images (those not included in webpack’s compilation assets) that you want to be parsed by imagemin.<br>If a destination value is not supplied the files are optimized in place. You can optionally set either of these to a function which will be invoked at the last possible second before optimization to grab files that might not exist at the time of writing the config (see #37 for more info).</p><p>The paths will work based on the webpack’s (and this plugin’s) <code>context</code> option, so in the following example, the files will be read from <code>./src/images/**/*.png</code> and will be written to <code>.src/public/images/**/*.png</code> Context only applies to the <code>sources</code> array.</p><p>Example:</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> ImageminPlugin <span class="keyword">from</span> <span class="string">&#x27;imagemin-webpack-plugin&#x27;</span></span><br><span class="line"><span class="keyword">import</span> glob <span class="keyword">from</span> <span class="string">&#x27;glob&#x27;</span></span><br><span class="line"></span><br><span class="line"><span class="built_in">module</span>.exports = &#123;</span><br><span class="line">  <span class="attr">plugins</span>: [</span><br><span class="line">    <span class="keyword">new</span> ImageminPlugin(&#123;</span><br><span class="line">      <span class="attr">externalImages</span>: &#123;</span><br><span class="line">        <span class="attr">context</span>: <span class="string">&#x27;src&#x27;</span>, <span class="comment">// Important! This tells the plugin where to &quot;base&quot; the paths at</span></span><br><span class="line">        <span class="attr">sources</span>: glob.sync(<span class="string">&#x27;src/images/**/*.png&#x27;</span>),</span><br><span class="line">        <span class="attr">destination</span>: <span class="string">&#x27;src/public/images&#x27;</span></span><br><span class="line">      &#125;</span><br><span class="line">    &#125;)</span><br><span class="line">  ]</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="options-minFileSize"><a href="#options-minFileSize" class="headerlink" title="options.minFileSize"></a>options.minFileSize</h4><p><strong>type</strong>: <code>Integer</code><br><strong>default</strong>: <code>0</code></p><p>Only apply to images that are <strong>larger</strong> than this value <em>in bytes</em>.</p><h4 id="options-maxFileSize"><a href="#options-maxFileSize" class="headerlink" title="options.maxFileSize"></a>options.maxFileSize</h4><p><strong>type</strong>: <code>Integer</code><br><strong>default</strong>: <code>Infinity</code></p><p>Only apply to images that are <strong>smaller than or equal-to</strong> this value <em>in bytes</em>.</p><p>This and <code>minFileSize</code> together can be used to include WebpackImageminPlugin multiple times with multiple configs on different file sizes.</p><p>Example:</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> ImageminPlugin <span class="keyword">from</span> <span class="string">&#x27;imagemin-webpack-plugin&#x27;</span></span><br><span class="line"><span class="keyword">import</span> glob <span class="keyword">from</span> <span class="string">&#x27;glob&#x27;</span></span><br><span class="line"></span><br><span class="line"><span class="built_in">module</span>.exports = &#123;</span><br><span class="line">  <span class="attr">plugins</span>: [</span><br><span class="line">    <span class="keyword">new</span> ImageminPlugin(&#123;</span><br><span class="line">      <span class="attr">maxFileSize</span>: <span class="number">10000</span>, <span class="comment">// Only apply this one to files equal to or under 10kb</span></span><br><span class="line">      <span class="attr">jpegtran</span>: &#123; <span class="attr">progressive</span>: <span class="literal">false</span> &#125;</span><br><span class="line">    &#125;),</span><br><span class="line">    <span class="keyword">new</span> ImageminPlugin(&#123;</span><br><span class="line">      <span class="attr">minFileSize</span>: <span class="number">10000</span>, <span class="comment">// Only apply this one to files over 10kb</span></span><br><span class="line">      <span class="attr">jpegtran</span>: &#123; <span class="attr">progressive</span>: <span class="literal">true</span> &#125;</span><br><span class="line">    &#125;)</span><br><span class="line">  ]</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="options-cacheFolder"><a href="#options-cacheFolder" class="headerlink" title="options.cacheFolder"></a>options.cacheFolder</h4><p><strong>type</strong>: <code>String</code><br><strong>default</strong>: <code>&#39;&#39;</code></p><p>Cache already minified images into a <code>cacheFolder</code>. On next run plugin will<br>check for the cached images first. If cached image exists it will simply use that one.<br>Otherwise image will be optimised and written to the <code>cacheFolder</code> for later builds.</p><p><strong>Note</strong>: This is a very simple cache implementation, it WILL NOT intelligently clear the<br>cache if you update the options in this plugin. There also might be significantly more files in the cache than you have images, this is normal, and a side-effect of how I’m deferring to <code>imagemin</code> to determine if a file is an image or not. It can be prevented by setting a good <code>test</code> regex.</p><p>Example:</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> resolve <span class="keyword">from</span> <span class="string">&#x27;path&#x27;</span></span><br><span class="line"><span class="keyword">import</span> ImageminPlugin <span class="keyword">from</span> <span class="string">&#x27;imagemin-webpack-plugin&#x27;</span></span><br><span class="line"></span><br><span class="line"><span class="built_in">module</span>.exports = &#123;</span><br><span class="line">  <span class="attr">plugins</span>: [</span><br><span class="line">    <span class="keyword">new</span> ImageminPlugin(&#123;</span><br><span class="line">      <span class="attr">cacheFolder</span>: resolve(<span class="string">&#x27;./cache&#x27;</span>), <span class="comment">// use existing folder called cache in the current dir</span></span><br><span class="line">    &#125;)</span><br><span class="line">  ]</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="以上说明来自官方仓库"><a href="#以上说明来自官方仓库" class="headerlink" title="以上说明来自官方仓库"></a>以上说明来自官方仓库</h3>]]></content>
      
      
      <categories>
          
          <category> webpack </category>
          
      </categories>
      
      
        <tags>
            
            <tag> plugin </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>gulp 初探</title>
      <link href="/2018/03/01/2018-03-01-gulp/"/>
      <url>/2018/03/01/2018-03-01-gulp/</url>
      
        <content type="html"><![CDATA[<hr><p> gulp的最初设计目的是拟合市场。<br> 首先概述下gulp。 gulp是基于nodejs的自动化构建工具。<br> gulp的流控制很好理解，就是文件的处理分成多个有序步骤。   </p><hr><p>今天看了下gulp,现在总结一下,并且构建一个能够监听后缀为less的文件，<br> 当文件被修改时能够重新处理代码的项目。  </p><h2 id="直接进入主题，构建一个简单的项目。"><a href="#直接进入主题，构建一个简单的项目。" class="headerlink" title="直接进入主题，构建一个简单的项目。"></a>直接进入主题，构建一个简单的项目。</h2><h3 id="准备-安装nodejs-，npm全局安装gulp-（npm-install-–global-gulp"><a href="#准备-安装nodejs-，npm全局安装gulp-（npm-install-–global-gulp" class="headerlink" title="准备: 安装nodejs ，npm全局安装gulp （npm install –global gulp);"></a>准备: 安装nodejs ，npm全局安装gulp （npm install –global gulp);</h3><h3 id="1-创建package-json文件-npm-init"><a href="#1-创建package-json文件-npm-init" class="headerlink" title="1. 创建package.json文件: npm init;"></a>1. 创建package.json文件: npm init;</br></h3><h3 id="2-安装依赖-npm-install-–save-dev-gulp-less-gulp-sourcemaps-gulp-notify-gulp-plumber"><a href="#2-安装依赖-npm-install-–save-dev-gulp-less-gulp-sourcemaps-gulp-notify-gulp-plumber" class="headerlink" title="2. 安装依赖 npm install –save-dev gulp-less gulp-sourcemaps gulp-notify gulp-plumber"></a>2. 安装依赖 npm install –save-dev gulp-less gulp-sourcemaps gulp-notify gulp-plumber</h3><p>   简单说明下这些依赖的作用: </p><h5 id="gulp-less-用于处理less文件，转换成css-、"><a href="#gulp-less-用于处理less文件，转换成css-、" class="headerlink" title="gulp-less(用于处理less文件，转换成css)、"></a>gulp-less(用于处理less文件，转换成css)、</h5><h5 id="gulp-sourcemaps（信息文件，里面储存着位置信息、在代码出错时非常有用）、"><a href="#gulp-sourcemaps（信息文件，里面储存着位置信息、在代码出错时非常有用）、" class="headerlink" title="gulp-sourcemaps（信息文件，里面储存着位置信息、在代码出错时非常有用）、"></a>gulp-sourcemaps（信息文件，里面储存着位置信息、在代码出错时非常有用）、</h5><h5 id="gulp-notify（代码出错时，能弹窗界面提示）、"><a href="#gulp-notify（代码出错时，能弹窗界面提示）、" class="headerlink" title="gulp-notify（代码出错时，能弹窗界面提示）、"></a>gulp-notify（代码出错时，能弹窗界面提示）、</h5><h5 id="gulp-plumber（阻止代码出错时，中断gulp-watch）。"><a href="#gulp-plumber（阻止代码出错时，中断gulp-watch）。" class="headerlink" title="gulp-plumber（阻止代码出错时，中断gulp.watch）。"></a>gulp-plumber（阻止代码出错时，中断gulp.watch）。</h5><h3 id="3-创建文件-gulpfile-js-入口文件"><a href="#3-创建文件-gulpfile-js-入口文件" class="headerlink" title="3.创建文件 gulpfile.js;(入口文件)"></a>3.创建文件 gulpfile.js;(<strong>入口文件</strong>)</h3><h3 id="输入下面代码"><a href="#输入下面代码" class="headerlink" title="输入下面代码"></a>输入下面代码</h3><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> gulp = <span class="built_in">require</span>(<span class="string">&#x27;gulp&#x27;</span>);</span><br><span class="line"><span class="keyword">var</span> less = <span class="built_in">require</span>(<span class="string">&#x27;gulp-less&#x27;</span>);</span><br><span class="line"><span class="keyword">var</span> sourcemaps = <span class="built_in">require</span>(<span class="string">&#x27;gulp-sourcemaps&#x27;</span>);</span><br><span class="line"><span class="keyword">var</span> plumber = <span class="built_in">require</span>(<span class="string">&#x27;gulp-plumber&#x27;</span>);</span><br><span class="line"><span class="keyword">var</span> notify = <span class="built_in">require</span>(<span class="string">&#x27;gulp-notify&#x27;</span>);</span><br><span class="line">gulp.task(<span class="string">&#x27;main&#x27;</span>,<span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">gulp.src(<span class="string">&#x27;./*.less&#x27;</span>)</span><br><span class="line">.pipe(plumber(&#123;<span class="attr">errorHandler</span>: notify.onError(<span class="string">&#x27;Error: &lt;%= error.message %&gt;&#x27;</span>)&#125;))</span><br><span class="line">.pipe(sourcemaps.init())</span><br><span class="line">.pipe(less())</span><br><span class="line">.pipe(sourcemaps.write(<span class="string">&#x27;./source&#x27;</span>))</span><br><span class="line">.pipe(gulp.dest(<span class="string">&#x27;./css/&#x27;</span>))</span><br><span class="line">&#125;)</span><br><span class="line"></span><br><span class="line">gulp.task(<span class="string">&#x27;watchLess&#x27;</span>,<span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">gulp.watch(<span class="string">&#x27;./*.less&#x27;</span>,[<span class="string">&#x27;main&#x27;</span>]);</span><br><span class="line">&#125;)</span><br></pre></td></tr></table></figure><p> 5.在当前文件目录下打开命令行，输入 <code>gulp watchLess</code>。</p>]]></content>
      
      
      <categories>
          
          <category> gulp </category>
          
      </categories>
      
      
        <tags>
            
            <tag> gulp </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>JavaScript原型</title>
      <link href="/2017/09/01/2017-09-01-Prototype/"/>
      <url>/2017/09/01/2017-09-01-Prototype/</url>
      
        <content type="html"><![CDATA[<h1 id="prototype-原型"><a href="#prototype-原型" class="headerlink" title="prototype(原型)"></a>prototype(原型)</h1><h3 id="原型是函数特有的。"><a href="#原型是函数特有的。" class="headerlink" title="原型是函数特有的。"></a>原型是函数特有的。</h3><blockquote><p>比如 <code>function P()&#123;&#125;</code>, P函数拥有属性(prototype)  </p></blockquote><h3 id="原型是可以更改的。"><a href="#原型是可以更改的。" class="headerlink" title="原型是可以更改的。"></a>原型是可以更改的。</h3><blockquote><p>我们可以在原型上添加和修改一些属性和方法，<br>比如 <code>P.prototype = &#123;method1: function()&#123;&#125;&#125;</code>  ,<br>但是这种赋值方式是直接覆盖原型，会覆盖之前的原型属性,<br>而我们常常是在原型上添加属性或者方法，所以除非是第一次给原型赋值，否则直接赋值是不正确的。<br>建议用这种方法添加原型: <code>P.prototype.method1 = function()&#123;&#125;</code></p></blockquote><h3 id="原型链（重要）。-原型上的属性和方法只能通过原型来修改，子实例无法直接修改。"><a href="#原型链（重要）。-原型上的属性和方法只能通过原型来修改，子实例无法直接修改。" class="headerlink" title="原型链（重要）。(原型上的属性和方法只能通过原型来修改，子实例无法直接修改。)"></a>原型链（重要）。(原型上的属性和方法只能通过原型来修改，子实例无法直接修改。)</h3><blockquote><p>关于对象属性(通过函数创建的实例)的查找顺序。 首先看一下这个例子:</p></blockquote><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">P.prototype.prop1 = <span class="string">&#x27;i am prop1 from propotype&#x27;</span>; </span><br><span class="line"><span class="keyword">var</span> p1 = <span class="keyword">new</span> P; </span><br><span class="line">p1.prop1; <span class="comment">// i am prop1 from propotype </span></span><br></pre></td></tr></table></figure><p>当通过 p1.prop1 来获取 p1对象的prop1属性时，p1先在自身的属性里面查找prop1，发现没有这个属性，<br>那怎么办呢？<br>p1会到原型链里面去找,他发现确实有这个属性，然后就把原型上prop1的值读取出来。<br>注意：如果没有找到prop1这个属性，他会继续顺着原型链直到找到需要的属性或者到达原型链的顶端(null)为止</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">p1.prop1 = <span class="string">&#x27;i am prop1 from my own prop&#x27;</span></span><br><span class="line">p1.prop1 <span class="comment">// i am prop1 from my own prop</span></span><br><span class="line">P.prototype.prop1 <span class="comment">// i am prop1 from propotype</span></span><br></pre></td></tr></table></figure><p>看到没有，当改变实例p1的prop1的值的时候，原型的prop1属性值没有变，这是因为p1本身没有prop1这个属性，直接<code>p1.prop1 = &#39;i am prop1 from my own prop&#39;</code>给他赋值这个属性之后，相当于只是给p1添加prop1属性，并不会改变原型的属性值。<br>当我们再次通过 p1.prop1 来获取值的时候，由于p1自身已经有prop1这个属性了,所以他直接读取自身的属性值，不会去原型上找了。)</p><h3 id="原型被子实例共享。"><a href="#原型被子实例共享。" class="headerlink" title="原型被子实例共享。"></a>原型被子实例共享。</h3><blockquote><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">P</span>(<span class="params"></span>)</span>&#123;&#125;; </span><br><span class="line">P.prototype.prop1 = <span class="keyword">new</span> <span class="built_in">Array</span>; </span><br><span class="line"><span class="keyword">var</span> p1 = <span class="keyword">new</span> P,</span><br><span class="line">p2 = <span class="keyword">new</span> P; </span><br><span class="line">p1.prop1 === p2.prop1; <span class="comment">// true</span></span><br><span class="line">p1.__prop__.prop1 = <span class="number">1</span>; </span><br><span class="line">p2.__prop__.prop1; <span class="comment">// 1</span></span><br></pre></td></tr></table></figure><p>(p1 跟 p2 都是 P的实例对象, 当修改p1原型的prop1属性值时，p2原型的prop1属性值也被同时修改了，所以他们两个的原型是共享的，。)<br>运算符 instanceof 也是根据原型来判断 某个对象是否属于某个构造函数的.</p></blockquote>]]></content>
      
      
      <categories>
          
          <category> javascript </category>
          
      </categories>
      
      
        <tags>
            
            <tag> javascript </tag>
            
        </tags>
      
    </entry>
    
    
  
  
</search>
